name: Build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
    branches:
      - main

env:
  PUBLIC_NAME: "Athavar's Tools"
  SOLUTION_NAME: 'Athavar.FFXIV.Plugin'
  INTERNAL_NAME: 'Athavar.FFXIV.Plugin'
  RELEASE_DIR: 'Athavar.FFXIV.Plugin\bin\Release\Athavar.FFXIV.Plugin'
  PERSONAL_PLUGIN_REPO: 'Athavar/Athavar.FFXIV.DalaRepo'

jobs:
  get-version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.12
        with:
          versionSpec: '5.x'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.12
        with:
          useConfigFile: true
  
  build:
    needs: get-version
    runs-on: windows-2022
    env:
      SEMVER: ${{ needs.get-version.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_SECRET }}
          submodules: recursive
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"   

      - name: Build
        run: |
          dotnet restore -r win ${{ env.SOLUTION_NAME }} -v n /p:Version=${{ env.SEMVER  }} 
          dotnet build --configuration Release -v n /p:Version=${{ env.SEMVER  }} ${{ env.PROJECT_NAME }}
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true

      - uses: actions/upload-artifact@v3
        with:
          name: PluginRepoZip
          path: ${{ env.RELEASE_DIR }}
          if-no-files-found: error
  
  release:
    needs: [ build, get-version ]
    runs-on: ubuntu-latest
    env:
      SEMVER: ${{ needs.get-version.outputs.semVer }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: PluginRepoZip

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.SEMVER }}",
              sha: context.sha
            })
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GIT_SECRET }}
          tag_name: ${{ env.SEMVER  }}
          repository: Athavar/Athavar.FFXIV.Plugin.Release
          files: |
            latest.zip
            ${{ env.INTERNAL_NAME }}.json

  deploy:
    needs: release
    if: "contains(toJSON(github.event.commits.*.message), '[PUSH]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          repository: ${{ env.PERSONAL_PLUGIN_REPO }}
          token: ${{ secrets.PAT }}
      - uses: actions/download-artifact@v3
        with:
          name: PluginRepoZip
          path: plugins/${{ env.INTERNAL_NAME }}
      - uses: EndBug/add-and-commit@v9
        with:
          add: --all
          author_name: GitHub Action
          author_email: action@github.com
          message: Update ${{ env.INTERNAL_NAME }}